<?xml version="1.0"?>
<project name="PRT" basedir="." xmlns:ac="antlib:net.sf.antcontrib">

	<description>Proformance Test</description>
	<!-- 获取配置数据 -->
	<property file="build.properties" />
	<!-- 定义变量-->
	<property environment="env" />
	<property name="jmeter.home" value="/usr/local/apache-jmeter-3.2"/>
	<property name="test.plan.path" value="${basedir}/script/${testcase.scriptName}.jmx"/>
	<property name="test.result.path" value="${basedir}/result"/>
	<property name="test.log.path" value="${basedir}/log"/>
	<property name="test.report.path" value="${basedir}/output"/>
	<property name="lib.dir" value="${basedir}/lib"/>
	
	<!--负责jar文件到lib下-->
	<copy todir="${jmeter.home}/lib">
				 <fileset dir="${user.dir}/lib">
				 <include name="*.jar" />
				 </fileset>
	</copy>	
	
	
	<!-- 设置ClassPath -->
    <path id="jmeter.classpath">
		<fileset dir="${lib.dir}">
				<include name="*.jar"/>
		</fileset>
    </path>
	
	<pathconvert pathsep=":"  property="jmeter.classpath" refid="jmeter.classpath"></pathconvert>

	<!--清理环境 -->
	<target name="init"
					depends="cleanReport,download-plugin-manager,install-plugins"/>
	
	<!-- 设置运行Task -->
	<target name="all"
			depends="clean,cleanReport,show-test-properties,run,toMysql,generate-report"/>
	
	<!-- 清理环境 -->
	<target name="clean">
		 <echo>清理环境数据</echo>
	     <delete dir="${test.result.path}"/>
		 <delete dir="${test.log.path}"/>
		 <delete dir="${test.report.path}"/>
	</target>
	
	<target name="cleanReport">
		<echo>重置DashBoard模板</echo>
		<delete dir="${jmeter.home}/bin/report-template"/>
		<copy todir="${jmeter.home}/bin/report-template">
			   <fileset dir="${basedir}/report-template">
			   </fileset>
		</copy>
	</target>
	
	<!-- 显示参数 -->
	<target name="show-test-properties">
		<echo>JMETER_HOME				: ${jmeter.home}</echo>
		<echo>TEST_PATH				: ${test.plan.path}</echo>
		<echo>TEST_SCRIPTNAME			: ${testcase.scriptName}.jmx</echo>
		<echo>THREADGROUP_COUNT			: ${threadgroup.count}</echo>
		<echo>THREADGROUP_RAMPUP			: ${threadgroup.rampup}</echo>
		<echo>THREADGROUP_DURATION		: ${threadgroup.duration}</echo>
		<echo>TESTCASE.ENV	: ${testcase.env}</echo>
		<echo>TESTCASE.TYPE		: ${testcase.type}</echo>
	</target>	

	<!-- 运行脚本 -->
	<taskdef
	    name="jmeter"
	    classpathref="jmeter.classpath"
	    classname="org.programmerplanet.ant.taskdefs.jmeter.JMeterTask"/>

	<!-- 执行脚本 -->
	<target name="run" depends="clean, show-test-properties">
		<!-- create dir -->
		<mkdir  dir="${test.result.path}"/>
		<mkdir  dir="${test.log.path}"/>
		
		<jmeter
			jmeterhome="${jmeter.home}"
		    testplan ="${test.plan.path}"
		    resultlog="${test.result.path}/${testcase.scriptName}.jtl"
			jmeterlogfile="${test.log.path}/jmeter.log"
			>
			<jvmarg value="${jvm.arg}"/> 
			
			<!-- 修改默认配置 -->
			<property name="jmeter.save.saveservice.output_format" value="csv"/>
			<property name="jmeter.reportgenerator.report_title" value="性能测试"/>
			<property name="jmeter.save.saveservice.assertion_results" value="all"/>
			<property name="jmeter.save.saveservice.thread_counts" value="true"/>
			<property name="jmeter.save.saveservice.bytes" value="true"/>
			<property name="jmeter.save.saveservice.response_data.on_error" value="true"/>
			<property name="jmeter.save.saveservice.label" value="true"/>
			<property name="jmeter.save.saveservice.latency" value="true"/>
			<property name="jmeter.save.saveservice.response_code" value="true"/>
			<property name="jmeter.save.saveservice.assertion_results_failure_message" value="true"/>
			<property name="jmeter.save.saveservice.response_message" value="true"/>
			<property name="jmeter.save.saveservice.successful" value="true"/>
			<property name="jmeter.save.saveservice.thread_counts" value="true"/>
			<property name="jmeter.save.saveservice.thread_name" value="true"/>
			
			<!-- 设置参数 -->
			<property name="threadgroup.count" value="${threadgroup.count}"/>
			<property name="threadgroup.rampup" value="${threadgroup.rampup}"/>
			<property name="threadgroup.duration" value="${threadgroup.duration}"/>
			<property name="testcase.env" value="${testcase.env}"/>
			<property name="testcase.type" value="${testcase.type}"/>
			
		</jmeter>
	</target>
	
	 <target name="toMysql">        
	        <java classname="com.jmeter.jtl.msql.JtlToMysql" 
	         classpathref="jmeter.classpath">
	           <arg value="${test.result.path}/${testcase.scriptName}.jtl"/>
	        </java>

	 </target>
	
	<!-- 生产报告 -->
	<target name="generate-report">
		  <mkdir  dir="${basedir}/output"/>
		  <java jar="${jmeter.home}/bin/ApacheJMeter.jar" fork="true">
				<arg value="-g" />
				<arg value="${test.result.path}/${testcase.scriptName}.jtl" />
				<arg value="-o" />
				<arg value="${basedir}/output/" />
		  </java>	
	</target>

	<!-- 生成截图文件 -->
	<taskdef uri="antlib:net.sf.antcontrib" resource="net/sf/antcontrib/antlib.xml">
	    <classpath>
	    	<pathelement location="${lib.dir}/ant-contrib-1.0b3.jar"/>
	  	</classpath>
	</taskdef>
	<target name="generate-chart">
		<ac:for param="reportType" list="LatenciesOverTime,TimesVsThreads,ResponseTimesOverTime,ThreadsStateOverTime,TransactionsPerSecond,ResponseTimesPercentiles,ResponseTimesDistribution">
			  <sequential>
					<exec executable="bash">
						  <arg value="${jmeter.home}/bin/JMeterPluginsCMD.sh"/>
						  <arg value="--tool"/>
						  <arg value="Reporter"/>
						  <arg value="--generate-png"/>
						  <arg value="${test.result.path}/@{reportType}.png"/>
						  <arg value="--input-jtl"/>
						  <arg value="${test.result.path}/${ScriptName}.jtl"/>
						  <arg value="--plugin-type"/>
						  <arg value="@{reportType}"/>
						  <arg value="--limit-rows"/>
						  <arg value="20"/>				        	
						  <arg value="--width"/>
						  <arg value="800"/>
						  <arg value="--height"/>
						  <arg value="600"/>
					</exec>
			  </sequential>
		</ac:for>
	</target>
	
	
	<!-- 下载第三方jar包 -->
	<target name="download-plugin-manager">
		<get src="${plugins.manager.src}" 
			dest="${jmeter.home}/lib/ext/jmeter-plugins-manager.jar"/>
		<get src="${cmdrunner.src}" 
			dest="${jmeter.home}/lib/cmdrunner-2.0.jar"/>	 
		<java  classname="org.jmeterplugins.repository.PluginManagerCMDInstaller">
			<classpath>
				<pathelement location="${jmeter.home}/lib/ext/jmeter-plugins-manager.jar"/>
			</classpath>
		</java>			 
	</target>

	<!-- 安装第三方jar包 -->
	<target name="install-plugins" depends="download-plugin-manager">
		  <exec executable="bash">
			<arg value="${jmeter.home}/bin/PluginsManagerCMD.sh"/>
			<arg value="install"/>
			<arg value="${plugins.list}"/>
		  </exec>
	</target>		
	
</project>
